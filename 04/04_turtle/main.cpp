/// Черепашка
/// ---------
/// Дана таблица N строк, M столбцов.
/// В каждой клетке записано целое число (вводим из текстового файла "turtle.txt").
/// Черепашка начинает ползти из верней левой клетки (0,0) в нижнюю правую.
///
/// Черепашка может ползти только вправо и вниз.
/// Когда черепашка проползает по клетке, она "съедает" число (прибавляет к своей сумме).
/// Если в клетке отрицательное число, то она "худеет" на это число.
///
/// Черепашка должна выбрать оптимальный маршрут, чтобы набрать максимальную сумму.
/// Нужно вывести максимальную сумму и сам маршрут (как она будет ползти).
/// Нарисовать таблицу и обозначить ```*``` где она проползёт.
///
/// Пример входных данных:
/// ```
/// 4 3
/// 1    1    6
/// 100  2   10000
/// 100  1    7
/// 3    2    4
/// ```
///
/// Ожидамый результат:
/// .  |   0     |  1     |  2
/// -- | ------- | ------ | --------
/// 0  |  1   *  |  1     |  6
/// 1  | 100 *   |  2 *   | 10000 *
/// 2  |  100    |  1     |  7    *
/// 3  |  3      |  2     |  4    *
///
/// Сумма: 10114

#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <iomanip>

using namespace std;

int main() {
  freopen("turtle.txt", "rt", stdin);

  int N, M; // Количество строк и стобцов
  cin >> N >> M;
  cout << "N = " << N << "   M = " << M << endl;

  int A[N][M]; // Поле с числами
  for(int i = 0; i < N; ++i) {
    for(int j = 0; j < M; ++j)
      cin >> A[i][j];
  }

  for(int i = 0; i < N; ++i) {
    for(int j = 0; j < M; ++j)
      cout << setw(6) << A[i][j] << " | ";
    cout << endl;
  }

  return 0;
}
